var path=require("path"),log=require("npmlog"),nopt=require("nopt"),async=require("async"),novacom=require("./../lib/base/novacom"),commonTools=require("./../lib/base/common-tools"),version=commonTools.version,cliControl=commonTools.cliControl,help=commonTools.help,setupDevice=commonTools.setupDevice,appdata=commonTools.appdata,errHndl=commonTools.errMsg,processName=path.basename(process.argv[1],".js");
process.on("uncaughtException",function(b){log.error("uncaughtException",b.toString());log.verbose("uncaughtException",b.stack);cliControl.end(-1)});
var knownOpts={help:Boolean,"hidden-help":Boolean,level:"silly verbose info http warn error".split(" "),version:Boolean,"device-list":Boolean,forward:Boolean,port:[String,Array],getkey:Boolean,passphrase:[String,null],device:[String,null],run:[String,null],put:[String,null],get:[String,null]},shortHands={h:["--help"],hh:["--hidden-help"],v:["--level","verbose"],V:["--version"],D:["--device-list"],f:["--forward"],p:["--port"],k:["--getkey"],pass:["--passphrase"],d:["--device"],r:["--run"]},argv=nopt(knownOpts,
shortHands,process.argv,2);log.heading=processName;log.level=argv.level||"warn";log.verbose("argv",argv);var options={name:argv.device},op;argv["device-list"]?setupDevice.showDeviceList(finish):argv.getkey?op=getkey:argv.run?op=run:argv.forward?op=forward:argv.version?version.showVersionAndExit():(argv["hidden-help"]?help.display(processName,appdata.getConfig(!0).profile,!0):help.display(processName,appdata.getConfig(!0).profile,!1),cliControl.end());
op&&version.checkNodeVersion(function(){async.series([op.bind(this)],finish)});
function getkey(b){var c=new novacom.Resolver;async.waterfall([c.load.bind(c),c.getSshPrvKey.bind(c,options),function(c,b){if(c){if(argv.passphrase)return b(null,c,argv.passphrase);process.stdin.resume();process.stdin.setEncoding("utf8");process.stdout.write("input passphrase [default: webos]:");process.stdin.on("data",function(a){a=a.toString().trim();""===a&&(a="webos");log.info("registed passphrase is ",a);b(null,c,a)})}else return b(Error("Error getting key file from the device"))},function(c,
b,d){var a={};a.name=options.name;a.privateKey={openSsh:c};a.passphrase=b;a.files="sftp";a.port="9922";a.username="prisoner";a.password="@DELETE@";d(null,a)},c.modifyDeviceFile.bind(c,"modify")],function(a){if(a)return b(a);b(null,{msg:"Success"})})}
function run(b){"true"===argv.run?finish(errHndl.changeErrMsg("EMPTY_VALUE","DEVICE_COMMAND")):options.session=new novacom.Session(options,function(c){log.verbose("run()","argv:",argv.run);log.verbose("run()","options:",options);c?b(c):options.session.run(argv.run,process.stdin,process.stdout,process.stderr,b)})}
function forward(b){log.info("forward","ports:",argv.port);if(argv.port&&"true"!==argv.port.toString()){var c=[function(a){options.session=new novacom.Session(options,a)}];try{argv.port.forEach(function(a){a=a.split(":");var b=parseInt(a[0],10),d=parseInt(a[1],10)||b;c.push(function(a){options.session.forward(b,d,a)});c.push(function(){console.log("forward","running...")})})}catch(a){b(a);return}async.series(c,b)}else finish(errHndl.changeErrMsg("EMPTY_VALUE","DEVICE_PORT:HOST_PORT"))}
function finish(b,c){b?(log.error(b.toString()),log.verbose(b.stack),cliControl.end(-1)):(log.info("finish():",c),c&&c.msg&&console.log(c.msg),cliControl.end())};
