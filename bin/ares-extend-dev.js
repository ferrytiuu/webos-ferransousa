var $jscomp={scope:{},checkStringArgs:function(a,c,b){if(null==a)throw new TypeError("The 'this' value for String.prototype."+b+" must not be null or undefined");if(c instanceof RegExp)throw new TypeError("First argument to String.prototype."+b+" must not be a regular expression");return a+""}};
$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw new TypeError("ES3 does not support getters and setters.");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)};$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global?global:a};$jscomp.global=$jscomp.getGlobal(this);
$jscomp.polyfill=function(a,c,b,d){if(c){b=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var e=a[d];e in b||(b[e]={});b=b[e]}a=a[a.length-1];d=b[a];c=c(d);c!=d&&null!=c&&$jscomp.defineProperty(b,a,{configurable:!0,writable:!0,value:c})}};$jscomp.polyfill("String.prototype.includes",function(a){return a?a:function(a,b){return-1!==$jscomp.checkStringArgs(this,a,"includes").indexOf(a,b||0)}},"es6-impl","es3");
var path=require("path"),log=require("npmlog"),nopt=require("nopt"),launchLib=require("../lib/launch"),commonTools=require("../lib/base/common-tools"),version=commonTools.version,cliControl=commonTools.cliControl,help=commonTools.help,setupDevice=commonTools.setupDevice,appdata=commonTools.appdata,processName=path.basename(process.argv[1],".js");process.on("uncaughtException",function(a){log.error("uncaughtException",a.toString());log.verbose("uncaughtException",a.stack);cliControl.end(-1)});
var knownOpts={device:[String,null],"device-list":Boolean,version:Boolean,help:Boolean,"hidden-help":Boolean,level:"silly verbose info http warn error".split(" ")},shortHands={d:["--device"],D:["--device-list"],V:["--version"],h:["--help"],hh:["--hidden-help"],v:["--level","verbose"]},argv=nopt(knownOpts,shortHands,process.argv,2);log.heading=processName;log.level=argv.level||"warn";launchLib.log.level=log.level;log.verbose("argv",argv);
var options={device:argv.device},params={extend:!0},appId="com.palmdts.devmode",op;argv.help||argv["hidden-help"]?(showUsage(argv["hidden-help"]),cliControl.end()):argv["device-list"]?setupDevice.showDeviceList(finish):argv.version?version.showVersionAndExit():op=extend;op&&version.checkNodeVersion(function(a){if(a)finish(a);else try{op()}catch(c){finish(c)}});
function showUsage(a){a?help.display(processName,appdata.getConfig(!0).profile,a):help.display(processName,appdata.getConfig(!0).profile)}function extend(){log.info("extend():","appId:",appId,"/params:",params);launchLib.launch(options,appId,params,finish)}
function finish(a,c){if(a){var b=a.toString();if(b.includes("not exist")||b.includes("not found"))b="Failed to launch 'Developer Mode' app. Please check the app is installed.";log.error(b);log.verbose(a.stack);cliControl.end(-1)}else c&&c.msg&&console.log("Launched 'Developer Mode' app.\nPlease check the 'Remain Session' through the device screen.\n"),cliControl.end()};
