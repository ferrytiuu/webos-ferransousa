var fs=require("fs"),path=require("path"),log=require("npmlog"),async=require("async"),spawn=require("child_process").spawn,exec=require("child_process").exec,shelljs=require("shelljs"),mkdirp=require("mkdirp");shelljs.config.fatal=!0;
(function(){var d={log:log,runBuild:function(c,d){function e(b,a){log.verbose("build#runBuild()#_checkCmdAvailable()");exec("if ! type "+b+" > /dev/null; then echo 1; else echo 0; fi;",function(f,c){if(f)return a(f);if("1"===c.toString().trim())return a(Error(b+" command is not available in this platform"));setImmediate(a)})}var g={};async.series([e.bind(this,"cmake"),e.bind(this,"make"),function(b){log.verbose("build#runBuild()#_makeDirForCmake()");this.tmpCmakeDir=path.join(path.resolve(c.buildDir),
"BUILD_CMAKE");fs.existsSync(this.tmpCmakeDir)?(console.log("["+c.processName+"] "+this.tmpCmakeDir+" is already existing..."),console.log("["+c.processName+"] Removing files in "+this.tmpCmakeDir),shelljs.rm("-rf",path.join(this.tmpCmakeDir,"*"))):(console.log("["+c.processName+"] Making a 'BUILD_CMAKE' directory "+this.tmpCmakeDir),mkdirp.sync(this.tmpCmakeDir));b()},function(b){log.verbose("build#runBuild()#_runCmake()");console.log("["+c.processName+"] Running cmake in "+this.tmpCmakeDir);var a=
[".."];g.configure&&a.push("-DCMAKE_BUILD_TYPE="+g.configure.toUpperCase());console.log("["+c.processName+"] cmake "+a.join(" "));a=spawn("cmake",a,{cwd:this.tmpCmakeDir});a.stdout.on("data",function(a){console.log(a.toString())});a.stderr.on("data",function(a){console.warn(a.toString())});a.on("error",function(a){return b(a)});a.on("close",function(a){if(0!==a)return b(Error("cmake exits with code("+a+")"));b()})},function(b){log.verbose("build#runBuild()#_runMake()");console.log("["+c.processName+
"] Running make in "+this.tmpCmakeDir);var a=[];console.log("["+c.processName+"] make "+a.join(" "));a=spawn("make",a,{cwd:this.tmpCmakeDir});a.stdout.on("data",function(a){console.log(a.toString())});a.stderr.on("data",function(a){console.warn(a.toString())});a.on("error",function(a){return b(a)});a.on("close",function(a){if(0!==a)return b(Error("make exits with code("+a+")"));b()})},function(b){log.verbose("build#runBuild()#_postAction()");console.log("DONE");b()}],function(b){d(b,{msg:"Success"})})}};
"undefined"!==typeof module&&module.exports&&(module.exports=d)})();
